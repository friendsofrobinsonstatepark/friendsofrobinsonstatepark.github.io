#!/usr/bin/env node
require('shelljs/global');

var fs = require('fs');
var opts = {silent:true};

var CURRENT_BRANCH = 'source';
console.log('Current branch: '+CURRENT_BRANCH);

var DEPLOY_BRANCH = 'master';
console.log('Deploying to branch: '+DEPLOY_BRANCH);

function sh(cmd) {
  try {
    var o = exec(cmd, opts);
    console.log('### '+cmd+' ### ($? '+o.code+')');
    console.log(o.output);
    return o;
  } catch(err) {
    return {code: 255};
  }
}

function setGitUser() {
  if (exec('git config --get user.name').code != 0) {
    exec('git config user.name '+process.env.GIT_NAME);
    exec('git config user.email '+process.env.GIT_EMAIL);
  }
}

function publish() {
  var repo = exec('git config remote.origin.url').output.replace(/^git:/, 'https:');

  sh('git remote set-url --push origin '+repo);
  sh('git remote set-branches --add origin '+DEPLOY_BRANCH);
  sh('git fetch -q');
  sh('git config credential.helper "store --file=.git/credentials"');
  fs.writeFileSync('.git/credentials', 'https://'+process.env.GH_TOKEN+':@github.com');
  exec('git push '+DEPLOY_BRANCH+' origin/'+DEPLOY_BRANCH);
  fs.unlinkSync('.git/credentials');
}

function render() {
  exec('node_modules/.bin/gulp');
  sh('git checkout '+DEPLOY_BRANCH);
  sh('ls build');
  sh('mv build/* .');
  sh('git add -A');
  sh('git commit -m "Automatic build"');
  sh('git checkout '+CURRENT_BRANCH);
}

setGitUser();
render();
if (process.env.TRAVIS_PULL_REQUEST > 0) {
  console.log('Publishing')
  publish();
}
